install.packages(c("DT", "formatR", "haven", "knitr", "RcppParallel", "tidyverse", "viridis"))
remotes::update_packages()
install.packages("RcppParallel")
install.packages(c("exactRankTests", "highr", "MendelianRandomization", "RcppParallel", "recipes", "tibble", "withr", "workflowsets"))
install.packages(c("cluster", "mgcv"), lib="C:/Program Files/R/R-4.0.5/library")
remotes::update_packages()
remotes::update_packages(dependencies = TRUE)
BiocManager::install()
install.packages("texPreview")
texPreview::check_requirements()
tinytex::tlmgr_install('listings')
texPreview::check_requirements()
Sys.getenv("CMD")
Sys.getenv()
install.packages("RcppParallel")
Sys.getenv("BINPREF")
Sys.getenv("PATH")
install.packages(c("callr", "RcppParallel", "tune"))
remotes::update_packages(dependencies = TRUE)
BiocManager::install()
update.packages(checkBuilt = T)
update.packages(checkBuilt = T, ask=F)
install.packages(c("dbscan", "muhaz", "xgboost"))
remotes::update_packages(dependencies = TRUE)
BiocManager::install()
install.packages("brglm")
install.packages(c("pcaPP", "RSQLite", "segmented", "tune"))
remotes::update_packages()
binom.test(51, 235, 1/6, alternative = "two.sided")
?binom.test
binom.test(51, 235, 1/6, alternative = "two.sided")
install.packages(c("ape", "bitops", "brio", "emmeans", "emulator", "entropy", "haven", "httpuv", "knitr", "later", "ncdfgeom", "OpenMx", "rgl", "V8"))
install.packages(c("cluster", "mgcv", "survival"), lib="C:/Program Files/R/R-4.0.5/library")
remotes::update_packages(dependencies=T)
BiocManager::install()
install.packages(c("arrow", "cli", "geoknife", "jquerylib", "shinydashboardPlus"))
remotes::update_packages()
install.packages("rJava")
Sys.getenv()
install.packages("rJava")
Sys.setenv(JAVA_HOME="")
Sys.getenv()
Sys.setenv(JAVA_HOME="")
install.packages("rJava")
Sys.getenv()
Sys.getenv()
Sys.getenv()
getwd()
Sys.getenv(JAVA_HOME)
Sys.getenv()
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
Sys.getenv()
install.packages("rJava")
install.packages("rJava")
install.packages("multcomp")
remotes::update_packages()
remotes::update_packages(dependencies = TRUE)
?lm
?glm
install.packages(c("devtools", "dplyr", "waiter", "xslt"))
remotes::update_packages()
remotes::install_github('mrcieu/twosamplemr')
install.packages(c("arrow", "BiocManager", "corrplot", "Cubist", "dendextend", "duckdb", "eaf", "exactextractr", "h2o", "httpuv", "insight", "jqr", "KFAS", "pdftools", "rmarkdown", "RPEIF", "RPESE", "rsample", "statmod", "stringi", "SuperLearner", "tesseract", "viridis"))
remotes::update_packages(dependencies = TRUE)
install.packages(c("diveMove", "ggiraph", "gt", "meta", "sass"))
install.packages(c("broomExtra", "bslib", "cubature", "MNP", "sjmisc", "VineCopula"))
remotes::update_packages()
library(rms)
library(haven)
dat <- read_dta("http://nicolaorsini.altervista.org/data/whitehall1")
dat <- read_dta("http://nicolaorsini.altervista.org/data/whitehall1.dta")
help(package = "rms")
spl <- rcs(dat$sysbp, 4)
spl <- rcs(dat$sysbp, 4)
fit <- lrm(dat$all10 ~ spl + dat$age)
dat$spl <- rcs(dat$sysbp, 4)
fit <- lrm(all10 ~ rcs(sysbp, 4) + age, data = dat)
summary(fit)
fit <- lrm(all10 ~ rcs(dat$sysbp, 4) + age, data = dat)
summary(fit)
Print(fit)
print(fit)
fit <- lrm(all10 ~ rcs(sysbp, 4) + age, data = dat)
print(fit)
fit <- lrm(all10 ~ rcs(sysbp, 4) + age, data = dat)
print(fit)
pred <- Predict(fit)
ddist <- datadist(dat)
options(datadist = 'ddist')
fit <- lrm(all10 ~ rcs(sysbp, 4) + age, data = dat)
print(fit)
pred <- Predict(fit)
library(ggplot2)
ggplot(pred)
pred <- Predict(fit, sysbps)
pred <- Predict(fit, sysbp)
ggplot(pred)
pred <- Predict(fit, sysbp, fun = 'exp')
ggplot(pred)
pred <- Predict(fit, sysbp)
ggplot(pred)
pred <- Predict(fit, sysbp, adj.zero = TRUE)
ggplot(pred)
pred <- Predict(fit, sysbp, ref.zero = TRUE)
ggplot(pred)
pred <- Predict(fit, sysbp, ref.zero = 107)
ggplot(pred)
?rcs
pred <- Predict(fit, sysbp, ref.zero = TRUE)
ggplot(pred)
exp(2)
suppressPackageStartupMessages({
require("Hmisc")
})
library(Statamarkdown)
log(4)
log(.5)
dist$limits$sysbp
dist$limits
dist[['limits']]
dist['limits']
ddist$limits$sysbp
ddist$limits$sysbp[2]
# set reference value to 107
ddist$limits$sysbp[2] <- 107
pred <- Predict(fit, sysbp, ref.zero = TRUE)
ggplot(pred)
# set reference value to 107
ddist$limits["Adjust to","sysbp"] <- 107
dat <- read_dta("http://nicolaorsini.altervista.org/data/whitehall1.dta")
ddist <- datadist(dat)
options(datadist = 'ddist')
fit <- lrm(all10 ~ rcs(sysbp, 4) + age, data = dat)
print(fit)
# set reference value to 107
ddist$limits["Adjust to","sysbp"] <- 107
pred <- Predict(fit, sysbp, ref.zero = TRUE)
ggplot(pred)
pred <- Predict(fit, sysbp, ref.zero = TRUE, fun = exp)
ggplot(pred)
ggplot(pred) + ylim(0,4)
# set reference value to 107
ddist$limits["Adjust to","x2"] <- 107
pred <- Predict(fit, sysbp, ref.zero = TRUE, fun = exp)
ggplot(pred)
mean(dat$sysbp)
pred <- Predict(fit, sysbp, fun = exp)
ggplot(pred)
r
pred <- Predict(fit, sysbp, ref.zero = TRUE, fun = exp)
ggplot(pred)
help(package = "rms")
gc()
gc()
install.packages("xfun")
help(package = "Hmisc")
380 / 9
install.packages(c("performance", "timereg"))
install.packages(c("arules", "fields", "flextable", "hms", "inline", "tufte"))
remotes::update_packages()
BiocManager::install()
lib_loc <- "C:\Users\eptmp\OneDrive - University of Bristol\Documents\R\win-library\4.0"
lib_loc <- "C:\\Users\\eptmp\\OneDrive - University of Bristol\\Documents\\R\\win-library\\4.0"
to_install <- unname(installed.packages(lib.loc = lib_loc)[, "Package"])
to_install
install.packages(pkgs = to_install)
help(package = "TwoSampleMR")
remotes::install_github("mrcieu/twosamplemr")
remotes::install_github("wspiller/radialmr")
remotes::install_github("wspiller/mvmr")
remotes::install_github("wspiller/rmvmr")
2 |> \(x) x + 1
2 |> \(x) x + 1
2 |> (\(x) x + 1)()
install.packages(c("bslib", "locatexec", "shape"))
remotes::update_packages()
BiocManager::install()
BiocManager::install()
gc()
5000 * 1.004
install.packages(c("RPEIF", "RPESE", "weights"))
remotes::install_github('tylermorganwall/rayvertex')
install.packages(c("broom", "circlize", "meta", "metafor", "optimx", "pander", "parallelly", "progressr", "ragg", "rbibutils", "sf", "spacetime", "sparklyr", "spatstat.utils", "tensorflow", "textshaping", "twang", "weights"))
remotes::update_packages()
BiocManager::install()
help(package = "nlmr")
93 / 365
93 / 365.25
3840-2160
# install.packages("remotes") # uncomment if remotes not installed
remotes::install_github("dea-hazewinkel/tmsens")
help(package = 'tmsens')
# install.packages("remotes") # uncomment if remotes not installed
remotes::install_github("dea-hazewinkel/tmsens")
set.seed(123456)
test_dat <- as.data.frame(cbind(c(rep(0, 500), rep(1, 500)),
c(sort(rnorm(500, 0, 1)),
sort(rnorm(500, 1, 1.5))),
rbinom(1000, 2, 0.4), rnorm(1000, 0, 1)))
colnames(test_dat) <- c("TR", "Y", "U", "U2")
head(test_dat)
test_dat$Y[1:200] <- NA
library(tmsens)
tm_obj <- tm(formula= Y ~ TR + U + U2,
GR = "TR", trF = 0.5, side = "LOW",
n_perm = 1000, adj_est = TRUE, data = test_dat)
print(tm_obj)
summary(tm_obj)
print(tm_obj)
summary(tm_obj)
help(package = "nlmr")
help(package = "MendelianRandomization")
install.packages(c("ade4", "DescTools", "rayvertex", "rbibutils", "relsurv", "s2", "smcfcs", "sparklyr", "spatstat.core", "testthat", "tmap", "vdiffr"))
remotes::update_packages()
remotes::update_packages()
BiocManager::install()
install.packages("DescTools")
library(DescTools)
remove.packages("DescTools", lib="~/R/win-library/4.1")
install.packages("DescTools)
install.packages("DescTools")
install.packages(c("dplyr", "fixest", "GGally", "plotly", "psych", "raster", "rio", "spData", "terra", "vdiffr"))
remotes::update_packages()
BiocManager::install()
install.packages("Rgraphviz")
install.packages("RBGL")
BiocManager::install("Rgraphviz")
BiocManager::install("RBGL")
BiocManager::install("KEGGgraph")
BiocManager::install("biomaRt")
remotes::update_packages()
remove.packages("duckdb-DESKTOP-2QJE0C2")
remotes::update_packages()
BiocManager::install()
?BiocManager::install()
?BiocManager::install(checkBuilt = TRUE)
BiocManager::install(checkBuilt = TRUE)
BiocManager::valid()
help(package = "remotes")
setwd("../Documents/GitHub")
setwd("OneSampleMR")
help(package = "devtools")
devtools::create()
devtools::create(path=".")
